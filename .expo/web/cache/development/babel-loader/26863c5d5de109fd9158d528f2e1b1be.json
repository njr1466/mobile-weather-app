{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport MiniCardHorizantal from \"./minicardhorizontal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Cardbottom = function Cardbottom(props) {\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.card,\n      children: [_jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\"\n        },\n        children: [_jsx(Text, {\n          style: styles.description,\n          children: \"NextForecast\"\n        }), _jsx(Text, {\n          style: styles.description,\n          children: \"Mar,30\"\n        })]\n      }), props.data.map(function (nome, index) {\n        if (index != 0) {\n          return _jsx(MiniCardHorizantal, {\n            day: nome.weekday,\n            max: nome.max,\n            min: nome.min,\n            condition: nome.condition\n          });\n        }\n        return null;\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#104084',\n    borderRadius: 16,\n    elevation: 3,\n    shadowColor: '#ffffff',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    padding: 10,\n    marginHorizontal: 16,\n    marginVertical: 2,\n    width: 330,\n    flex: 1\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  description: {\n    fontSize: 18,\n    paddingRight: 130,\n    paddingTop: 0,\n    color: '#ffffff'\n  },\n  description1: {\n    fontSize: 18,\n    paddingRight: 56,\n    paddingTop: 20,\n    color: '#ffffff'\n  },\n  description2: {\n    fontSize: 20,\n    paddingLeft: 49,\n    paddingTop: 20,\n    color: '#ffffff'\n  }\n});\nexport default Cardbottom;","map":{"version":3,"names":["React","StyleSheet","View","Text","Image","ScrollView","MiniCardHorizantal","jsx","_jsx","jsxs","_jsxs","Cardbottom","props","children","style","styles","card","flex","flexDirection","description","data","map","nome","index","day","weekday","max","min","condition","create","backgroundColor","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","padding","marginHorizontal","marginVertical","title","fontSize","fontWeight","marginBottom","paddingRight","paddingTop","color","description1","description2","paddingLeft"],"sources":["/Users/nilsonjunior/weather/mobile-weather-app/components/card3.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, Image, ScrollView } from 'react-native';\nimport MiniCardHorizantal from './minicardhorizontal';\nconst Cardbottom = (props) => {\n  return (\n\n    <ScrollView>\n      <View style={styles.card}>\n        <View style={{ flex: 1, flexDirection: \"row\" }}>\n          <Text style={styles.description}>NextForecast</Text>\n          <Text style={styles.description}>Mar,30</Text>\n        </View>\n       \n\n\n{props.data.map((nome, index) => {\n        if (index != 0) {\n          return (\n            <MiniCardHorizantal day={nome.weekday} max={nome.max} min={nome.min} condition={nome.condition}></MiniCardHorizantal>\n          );\n        }\n        return null;\n      })} \n\n\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#104084',\n    borderRadius: 16,\n    elevation: 3,\n    shadowColor: '#ffffff',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    padding: 10,\n    marginHorizontal: 16,\n    marginVertical: 2,\n    width: 330,\n    flex: 1,\n\n\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  description: {\n    fontSize: 18,\n    paddingRight: 130,\n    paddingTop: 0,\n    color: '#ffffff',\n\n  },\n  description1: {\n    fontSize: 18,\n    paddingRight: 56,\n    paddingTop: 20,\n    color: '#ffffff',\n\n  },\n  description2: {\n    fontSize: 20,\n    paddingLeft: 49,\n    paddingTop: 20,\n    color: '#ffffff'\n  }\n});\n\nexport default Cardbottom;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,kBAAkB;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACtD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;EAC5B,OAEEJ,IAAA,CAACH,UAAU;IAAAQ,QAAA,EACTH,KAAA,CAACR,IAAI;MAACY,KAAK,EAAEC,MAAM,CAACC,IAAK;MAAAH,QAAA,GACvBH,KAAA,CAACR,IAAI;QAACY,KAAK,EAAE;UAAEG,IAAI,EAAE,CAAC;UAAEC,aAAa,EAAE;QAAM,CAAE;QAAAL,QAAA,GAC7CL,IAAA,CAACL,IAAI;UAACW,KAAK,EAAEC,MAAM,CAACI,WAAY;UAAAN,QAAA,EAAC;QAAY,EAAO,EACpDL,IAAA,CAACL,IAAI;UAACW,KAAK,EAAEC,MAAM,CAACI,WAAY;UAAAN,QAAA,EAAC;QAAM,EAAO;MAAA,EACzC,EAIdD,KAAK,CAACQ,IAAI,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;QACzB,IAAIA,KAAK,IAAI,CAAC,EAAE;UACd,OACEf,IAAA,CAACF,kBAAkB;YAACkB,GAAG,EAAEF,IAAI,CAACG,OAAQ;YAACC,GAAG,EAAEJ,IAAI,CAACI,GAAI;YAACC,GAAG,EAAEL,IAAI,CAACK,GAAI;YAACC,SAAS,EAAEN,IAAI,CAACM;UAAU,EAAsB;QAEzH;QACA,OAAO,IAAI;MACb,CAAC,CAAC;IAAA;EAGK,EACI;AAEjB,CAAC;AAED,IAAMb,MAAM,GAAGd,UAAU,CAAC4B,MAAM,CAAC;EAC/Bb,IAAI,EAAE;IACJc,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCC,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE,EAAE;IACXC,gBAAgB,EAAE,EAAE;IACpBC,cAAc,EAAE,CAAC;IACjBN,KAAK,EAAE,GAAG;IACVlB,IAAI,EAAE;EAGR,CAAC;EACDyB,KAAK,EAAE;IACLC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACD1B,WAAW,EAAE;IACXwB,QAAQ,EAAE,EAAE;IACZG,YAAY,EAAE,GAAG;IACjBC,UAAU,EAAE,CAAC;IACbC,KAAK,EAAE;EAET,CAAC;EACDC,YAAY,EAAE;IACZN,QAAQ,EAAE,EAAE;IACZG,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE;EAET,CAAC;EACDE,YAAY,EAAE;IACZP,QAAQ,EAAE,EAAE;IACZQ,WAAW,EAAE,EAAE;IACfJ,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAerC,UAAU"},"metadata":{},"sourceType":"module"}