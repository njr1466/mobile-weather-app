{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\nimport CardTop from \"../../components/cardTop/cardTop\";\nimport CardMiddle from \"../../components/cardMiddle/cardMiddle\";\nimport CardBottom from \"../../components/cardBottom/cardBottom\";\nimport MainCard from \"../../components/maincard/maincard\";\nimport Header from \"../../components/header/header\";\nimport { getResults, getTodayResults, getColor } from \"../api/api\";\nimport { getImage, getDatetoName } from \"../utils/utils\";\nimport { SearchBar, Image } from 'react-native-elements';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    results = _useState2[0],\n    setResults = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    date = _useState4[0],\n    setDate = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    image = _useState6[0],\n    setImage = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    today = _useState8[0],\n    setToday = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    forecast = _useState10[0],\n    setForecast = _useState10[1];\n  var _useState11 = useState('Gramado'),\n    _useState12 = _slicedToArray(_useState11, 2),\n    search = _useState12[0],\n    setSearch = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    refresh = _useState14[0],\n    setrefresh = _useState14[1];\n  var _useState15 = useState(true),\n    _useState16 = _slicedToArray(_useState15, 2),\n    visible = _useState16[0],\n    setVisible = _useState16[1];\n  var _useState17 = useState(),\n    _useState18 = _slicedToArray(_useState17, 2),\n    colorCard = _useState18[0],\n    setColorCard = _useState18[1];\n  var _useState19 = useState(),\n    _useState20 = _slicedToArray(_useState19, 2),\n    colorBack = _useState20[0],\n    setColorBack = _useState20[1];\n  var _useState21 = useState(true),\n    _useState22 = _slicedToArray(_useState21, 2),\n    loading = _useState22[0],\n    setLoading = _useState22[1];\n  var handleCancel = function handleCancel() {\n    setSearch('');\n  };\n  var handleOpen = function handleOpen() {\n    if (visible) {\n      setVisible(false);\n    } else {\n      setVisible(true);\n    }\n  };\n  var handleSearch = function handleSearch() {\n    if (visible) {\n      setVisible(false);\n    } else {\n      setVisible(true);\n    }\n    setrefresh(Math.random);\n  };\n  useEffect(function () {\n    getResults(search).then(function (response) {\n      setResults(response);\n      setForecast(response.forecast);\n      setDate(getDatetoName(response.date));\n      setLoading(false);\n    });\n    getTodayResults(search).then(function (response) {\n      setToday(response);\n      setImage(getImage(response.condition));\n    });\n    getColor(search).then(function (response) {\n      setColorCard(response === \"noite\" ? \"#104084\" : \"#0490BC\");\n      setColorBack(response === \"noite\" ? \"#134CB5\" : \"#47BBE1\");\n    });\n  }, [refresh]);\n  return _jsx(ScrollView, {\n    children: loading ? _jsx(View, {\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0000ff\"\n      })\n    }) : _jsxs(View, {\n      style: [styles.container, {\n        backgroundColor: colorBack\n      }],\n      children: [_jsx(LinearGradient, {\n        colors: ['rgba(0,0,0,1)', 'transparent']\n      }), !visible && _jsx(View, {\n        style: {\n          width: '100%'\n        },\n        children: _jsx(SearchBar, {\n          placeholder: \"Procure uma cidade...\",\n          value: search,\n          onChangeText: function onChangeText(text) {\n            return setSearch(text);\n          },\n          containerStyle: {\n            backgroundColor: 'transparent',\n            borderBottomColor: 'transparent',\n            borderTopColor: 'transparent',\n            padding: 40\n          },\n          inputContainerStyle: {\n            backgroundColor: '#fff'\n          },\n          searchIcon: {\n            color: '#000'\n          },\n          clearIcon: {\n            color: '#000',\n            onPress: handleCancel\n          },\n          onSubmitEditing: handleSearch\n        })\n      }), visible && _jsx(TouchableOpacity, {\n        onPress: handleOpen,\n        children: _jsx(Header, {\n          city: search\n        })\n      }), _jsx(MainCard, {\n        image: image,\n        temp: results.temp,\n        today: today,\n        children: \" \"\n      }), _jsx(CardTop, {\n        results: results,\n        color: colorCard,\n        today: today\n      }), _jsx(CardMiddle, {\n        day: date,\n        sunrise: results.sunrise,\n        sunset: results.sunset,\n        color: colorCard\n      }), _jsx(CardBottom, {\n        data: forecast,\n        color: colorCard\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","TouchableOpacity","Text","View","ScrollView","ActivityIndicator","LinearGradient","Ionicons","CardTop","CardMiddle","CardBottom","MainCard","Header","getResults","getTodayResults","getColor","getImage","getDatetoName","SearchBar","Image","styles","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","results","setResults","_useState3","_useState4","date","setDate","_useState5","_useState6","image","setImage","_useState7","_useState8","today","setToday","_useState9","_useState10","forecast","setForecast","_useState11","_useState12","search","setSearch","_useState13","_useState14","refresh","setrefresh","_useState15","_useState16","visible","setVisible","_useState17","_useState18","colorCard","setColorCard","_useState19","_useState20","colorBack","setColorBack","_useState21","_useState22","loading","setLoading","handleCancel","handleOpen","handleSearch","Math","random","then","response","condition","children","size","color","style","container","backgroundColor","colors","width","placeholder","value","onChangeText","text","containerStyle","borderBottomColor","borderTopColor","padding","inputContainerStyle","searchIcon","clearIcon","onPress","onSubmitEditing","city","temp","day","sunrise","sunset","data"],"sources":["/Users/nilsonjunior/weather/mobile-weather-app/screens/home/home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, TouchableOpacity, Text, View, ScrollView, ActivityIndicator } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\nimport CardTop from '../../components/cardTop/cardTop';\nimport CardMiddle from '../../components/cardMiddle/cardMiddle';\nimport CardBottom from '../../components/cardBottom/cardBottom';\nimport MainCard from '../../components/maincard/maincard';\nimport Header from '../../components/header/header';\nimport { getResults, getTodayResults, getColor } from '../api/api';\nimport { getImage, getDatetoName } from '../utils/utils';\nimport { SearchBar, Image } from 'react-native-elements';\nimport styles from './styles';\n\n\n\nexport default function App() {\n\n  const [results, setResults] = useState([]);\n  const [date, setDate] = useState();\n  const [image, setImage] = useState();\n  const [today, setToday] = useState([]);\n  const [forecast, setForecast] = useState([]);\n  const [search, setSearch] = useState('Gramado');\n  const [refresh, setrefresh] = useState();\n  const [visible, setVisible] = useState(true);\n  const [colorCard, setColorCard] = useState();\n  const [colorBack, setColorBack] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const handleCancel = () => {\n    setSearch('');\n  };\n\n  const handleOpen = () => {\n\n    if (visible) {\n      setVisible(false);\n    } else {\n      setVisible(true);\n    }\n  };\n\n  const handleSearch = () => {\n    if (visible) {\n      setVisible(false);\n    } else {\n      setVisible(true);\n    }\n    setrefresh(Math.random);\n  };\n\n  useEffect(() => {\n    getResults(search).then((response) => {\n      setResults(response);\n      setForecast(response.forecast);\n      setDate(getDatetoName(response.date));\n      setLoading(false);\n    });\n\n    getTodayResults(search).then((response) => {\n      setToday(response);\n      setImage(getImage(response.condition));\n    });\n\n    getColor(search).then((response) => {\n      setColorCard((response === \"noite\") ? \"#104084\" : \"#0490BC\");\n      setColorBack((response === \"noite\") ? \"#134CB5\" : \"#47BBE1\");\n\n    });\n\n  }, [refresh])\n\n  return (\n    <ScrollView>\n      {loading ?\n        <View >\n          <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n        </View> :\n        <View style={[styles.container, { backgroundColor: colorBack }]}  >\n          <LinearGradient\n            colors={['rgba(0,0,0,1)', 'transparent']}\n          />\n\n          {!visible && (\n            <View style={{ width: '100%' }}>\n              <SearchBar\n                placeholder=\"Procure uma cidade...\"\n                value={search}\n                onChangeText={text => setSearch(text)}\n                containerStyle={{ backgroundColor: 'transparent', borderBottomColor: 'transparent', borderTopColor: 'transparent', padding: 40 }}\n                inputContainerStyle={{ backgroundColor: '#fff' }}\n                searchIcon={{ color: '#000' }}\n                clearIcon={{ color: '#000', onPress: handleCancel }}\n                onSubmitEditing={handleSearch}\n              />\n            </View>\n          )}\n\n          {visible && (\n            <TouchableOpacity onPress={handleOpen}>\n              <Header city={search}></Header>\n            </TouchableOpacity>\n          )}\n\n          <MainCard image={image} temp={results.temp} today={today} > </MainCard>\n          <CardTop results={results} color={colorCard} today={today}></CardTop>\n          <CardMiddle day={date} sunrise={results.sunrise} sunset={results.sunset} color={colorCard}></CardMiddle>\n          <CardBottom data={forecast} color={colorCard}></CardBottom>\n\n        </View>\n      }\n    </ScrollView>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAEnD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,OAAO;AACd,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,QAAQ;AACf,OAAOC,MAAM;AACb,SAASC,UAAU,EAAEC,eAAe,EAAEC,QAAQ;AAC9C,SAASC,QAAQ,EAAEC,aAAa;AAChC,SAASC,SAAS,EAAEC,KAAK,QAAQ,uBAAuB;AACxD,OAAOC,MAAM;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI9B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAA8B3B,QAAQ,CAAC,EAAE,CAAC;IAAA4B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAwBhC,QAAQ,EAAE;IAAAiC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,UAAA,GAA0BpC,QAAQ,EAAE;IAAAqC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA7BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA0BxC,QAAQ,CAAC,EAAE,CAAC;IAAAyC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAgC5C,QAAQ,CAAC,EAAE,CAAC;IAAA6C,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAArCE,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAC5B,IAAAG,WAAA,GAA4BhD,QAAQ,CAAC,SAAS,CAAC;IAAAiD,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAAxCE,MAAM,GAAAD,WAAA;IAAEE,SAAS,GAAAF,WAAA;EACxB,IAAAG,WAAA,GAA8BpD,QAAQ,EAAE;IAAAqD,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAAjCE,OAAO,GAAAD,WAAA;IAAEE,UAAU,GAAAF,WAAA;EAC1B,IAAAG,WAAA,GAA8BxD,QAAQ,CAAC,IAAI,CAAC;IAAAyD,WAAA,GAAA5B,cAAA,CAAA2B,WAAA;IAArCE,OAAO,GAAAD,WAAA;IAAEE,UAAU,GAAAF,WAAA;EAC1B,IAAAG,WAAA,GAAkC5D,QAAQ,EAAE;IAAA6D,WAAA,GAAAhC,cAAA,CAAA+B,WAAA;IAArCE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAC9B,IAAAG,WAAA,GAAkChE,QAAQ,EAAE;IAAAiE,WAAA,GAAApC,cAAA,CAAAmC,WAAA;IAArCE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAC9B,IAAAG,WAAA,GAA8BpE,QAAQ,CAAC,IAAI,CAAC;IAAAqE,WAAA,GAAAxC,cAAA,CAAAuC,WAAA;IAArCE,OAAO,GAAAD,WAAA;IAAEE,UAAU,GAAAF,WAAA;EAE1B,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBrB,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,IAAMsB,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IAEvB,IAAIf,OAAO,EAAE;MACXC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLA,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,IAAMe,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIhB,OAAO,EAAE;MACXC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLA,UAAU,CAAC,IAAI,CAAC;IAClB;IACAJ,UAAU,CAACoB,IAAI,CAACC,MAAM,CAAC;EACzB,CAAC;EAED7E,SAAS,CAAC,YAAM;IACde,UAAU,CAACoC,MAAM,CAAC,CAAC2B,IAAI,CAAC,UAACC,QAAQ,EAAK;MACpC/C,UAAU,CAAC+C,QAAQ,CAAC;MACpB/B,WAAW,CAAC+B,QAAQ,CAAChC,QAAQ,CAAC;MAC9BX,OAAO,CAACjB,aAAa,CAAC4D,QAAQ,CAAC5C,IAAI,CAAC,CAAC;MACrCqC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEFxD,eAAe,CAACmC,MAAM,CAAC,CAAC2B,IAAI,CAAC,UAACC,QAAQ,EAAK;MACzCnC,QAAQ,CAACmC,QAAQ,CAAC;MAClBvC,QAAQ,CAACtB,QAAQ,CAAC6D,QAAQ,CAACC,SAAS,CAAC,CAAC;IACxC,CAAC,CAAC;IAEF/D,QAAQ,CAACkC,MAAM,CAAC,CAAC2B,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClCf,YAAY,CAAEe,QAAQ,KAAK,OAAO,GAAI,SAAS,GAAG,SAAS,CAAC;MAC5DX,YAAY,CAAEW,QAAQ,KAAK,OAAO,GAAI,SAAS,GAAG,SAAS,CAAC;IAE9D,CAAC,CAAC;EAEJ,CAAC,EAAE,CAACxB,OAAO,CAAC,CAAC;EAEb,OACE/B,IAAA,CAAClB,UAAU;IAAA2E,QAAA,EACRV,OAAO,GACN/C,IAAA,CAACnB,IAAI;MAAA4E,QAAA,EACHzD,IAAA,CAACjB,iBAAiB;QAAC2E,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS;IAAG,EAC7C,GACPzD,KAAA,CAACrB,IAAI;MAAC+E,KAAK,EAAE,CAAC9D,MAAM,CAAC+D,SAAS,EAAE;QAAEC,eAAe,EAAEnB;MAAU,CAAC,CAAE;MAAAc,QAAA,GAC9DzD,IAAA,CAAChB,cAAc;QACb+E,MAAM,EAAE,CAAC,eAAe,EAAE,aAAa;MAAE,EACzC,EAED,CAAC5B,OAAO,IACPnC,IAAA,CAACnB,IAAI;QAAC+E,KAAK,EAAE;UAAEI,KAAK,EAAE;QAAO,CAAE;QAAAP,QAAA,EAC7BzD,IAAA,CAACJ,SAAS;UACRqE,WAAW,EAAC,uBAAuB;UACnCC,KAAK,EAAEvC,MAAO;UACdwC,YAAY,EAAE,SAAAA,aAAAC,IAAI;YAAA,OAAIxC,SAAS,CAACwC,IAAI,CAAC;UAAA,CAAC;UACtCC,cAAc,EAAE;YAAEP,eAAe,EAAE,aAAa;YAAEQ,iBAAiB,EAAE,aAAa;YAAEC,cAAc,EAAE,aAAa;YAAEC,OAAO,EAAE;UAAG,CAAE;UACjIC,mBAAmB,EAAE;YAAEX,eAAe,EAAE;UAAO,CAAE;UACjDY,UAAU,EAAE;YAAEf,KAAK,EAAE;UAAO,CAAE;UAC9BgB,SAAS,EAAE;YAAEhB,KAAK,EAAE,MAAM;YAAEiB,OAAO,EAAE3B;UAAa,CAAE;UACpD4B,eAAe,EAAE1B;QAAa;MAC9B,EAEL,EAEAhB,OAAO,IACNnC,IAAA,CAACrB,gBAAgB;QAACiG,OAAO,EAAE1B,UAAW;QAAAO,QAAA,EACpCzD,IAAA,CAACV,MAAM;UAACwF,IAAI,EAAEnD;QAAO;MAAU,EAElC,EAED3B,IAAA,CAACX,QAAQ;QAAC0B,KAAK,EAAEA,KAAM;QAACgE,IAAI,EAAExE,OAAO,CAACwE,IAAK;QAAC5D,KAAK,EAAEA,KAAM;QAAAsC,QAAA,EAAE;MAAC,EAAW,EACvEzD,IAAA,CAACd,OAAO;QAACqB,OAAO,EAAEA,OAAQ;QAACoD,KAAK,EAAEpB,SAAU;QAACpB,KAAK,EAAEA;MAAM,EAAW,EACrEnB,IAAA,CAACb,UAAU;QAAC6F,GAAG,EAAErE,IAAK;QAACsE,OAAO,EAAE1E,OAAO,CAAC0E,OAAQ;QAACC,MAAM,EAAE3E,OAAO,CAAC2E,MAAO;QAACvB,KAAK,EAAEpB;MAAU,EAAc,EACxGvC,IAAA,CAACZ,UAAU;QAAC+F,IAAI,EAAE5D,QAAS;QAACoC,KAAK,EAAEpB;MAAU,EAAc;IAAA;EAEtD,EAEE;AAEjB"},"metadata":{},"sourceType":"module"}